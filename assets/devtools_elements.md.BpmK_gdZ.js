import{_ as a,c as e,o as l,a4 as o}from"./chunks/framework.DkZrsx35.js";const p=JSON.parse('{"title":"元素/控制台面板介绍","description":"","frontmatter":{},"headers":[],"relativePath":"devtools/elements.md","filePath":"devtools/elements.md"}'),i={name:"devtools/elements.md"},t=o('<h1 id="元素-控制台面板介绍" tabindex="-1">元素/控制台面板介绍 <a class="header-anchor" href="#元素-控制台面板介绍" aria-label="Permalink to &quot;元素/控制台面板介绍&quot;">​</a></h1><h2 id="存储为全局变量" tabindex="-1">存储为全局变量 <a class="header-anchor" href="#存储为全局变量" aria-label="Permalink to &quot;存储为全局变量&quot;">​</a></h2><p>右键点击 DOM 节点，选择 Store as global variable 即可。 在控制台中输入 temp1，然后按 Enter 键。表达式的结果 表示该变量的求值结果是该节点。</p><h2 id="自动化测试中引用节点" tabindex="-1">自动化测试中引用节点 <a class="header-anchor" href="#自动化测试中引用节点" aria-label="Permalink to &quot;自动化测试中引用节点&quot;">​</a></h2><p>右键点击 DOM 树中的节点，然后选择 复制 &gt;复制 JS 路径。document.querySelector() 表达式可解析为 该节点已复制到剪贴板</p><h2 id="dom节点对应的属性" tabindex="-1">DOM节点对应的属性 <a class="header-anchor" href="#dom节点对应的属性" aria-label="Permalink to &quot;DOM节点对应的属性&quot;">​</a></h2><ul><li>以粗体显示的属性是对象自身的属性</li><li>以常规字体的属性继承自原型链</li><li>可枚举属性的颜色是明亮的。非枚举属性浅色。</li></ul><h2 id="布局" tabindex="-1">布局 <a class="header-anchor" href="#布局" aria-label="Permalink to &quot;布局&quot;">​</a></h2><p>网格叠加层</p><h2 id="控制台中访问节点" tabindex="-1">控制台中访问节点 <a class="header-anchor" href="#控制台中访问节点" aria-label="Permalink to &quot;控制台中访问节点&quot;">​</a></h2><ul><li>$0 表示当前选中的元素</li><li>$1, $2, $3...表示之前选中的元素。</li><li>$/$$ 查找元素</li></ul><h2 id="检查函数" tabindex="-1">检查函数 <a class="header-anchor" href="#检查函数" aria-label="Permalink to &quot;检查函数&quot;">​</a></h2><p>console.dir(obj) 检查对象</p><h2 id="跟踪调用栈" tabindex="-1">跟踪调用栈 <a class="header-anchor" href="#跟踪调用栈" aria-label="Permalink to &quot;跟踪调用栈&quot;">​</a></h2><p>console.trace() 输出调用栈</p><h2 id="console常用的方法" tabindex="-1">console常用的方法 <a class="header-anchor" href="#console常用的方法" aria-label="Permalink to &quot;console常用的方法&quot;">​</a></h2><ul><li>log()</li><li>info()</li><li>warn()</li><li>error()</li><li>count()</li><li>table()</li><li>clear()</li><li>assert() 断言输出</li><li>time() timeEnd() 计时器开始和结束</li><li>profile() profileEnd() 性能分析开始和结束</li></ul>',17),r=[t];function n(s,h,d,c,u,m){return l(),e("div",null,r)}const b=a(i,[["render",n]]);export{p as __pageData,b as default};
