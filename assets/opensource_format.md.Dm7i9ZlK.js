import{_ as s,c as n,o as a,a4 as p}from"./chunks/framework.DkZrsx35.js";const e="/web/assets/image.B93H4HUP.png",g=JSON.parse('{"title":"文档结构","description":"","frontmatter":{},"headers":[],"relativePath":"opensource/format.md","filePath":"opensource/format.md"}'),l={name:"opensource/format.md"},i=p('<h1 id="文档结构" tabindex="-1">文档结构 <a class="header-anchor" href="#文档结构" aria-label="Permalink to &quot;文档结构&quot;">​</a></h1><h2 id="文档组成" tabindex="-1">文档组成 <a class="header-anchor" href="#文档组成" aria-label="Permalink to &quot;文档组成&quot;">​</a></h2><p>一个简单有效的 PDF 文件按顺序包含四个部分:</p><ol><li><em>header</em> ，提供 PDF 版本号</li><li><em>body</em> 包含页面，图形内容和大部分辅助信息的主体，全部编码为一系列对象。</li><li>交叉引用表，列出文件中每个对象的位置便于随机访问。</li><li>trailer 包括 trailer 字典，它有助于找到文件的每个部分， 并列出可以在不处理整个文件的情况下读取的各种元数据。 <img src="'+e+`" alt="alt text"></li></ol><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>%PDF-1.4 % Header从这里开始</span></span>
<span class="line"><span>%âãÏÓ</span></span>
<span class="line"><span>1 0 obj % Body从这里开始</span></span>
<span class="line"><span>&lt;&lt;</span></span>
<span class="line"><span>/Kids [2 0 R] /</span></span>
<span class="line"><span>/Count 1</span></span>
<span class="line"><span>/Type /Pages</span></span>
<span class="line"><span>&gt;&gt;</span></span>
<span class="line"><span>endobj</span></span>
<span class="line"><span>2 0 obj</span></span>
<span class="line"><span>&lt;&lt;</span></span>
<span class="line"><span>25</span></span>
<span class="line"><span>/Rotate 0</span></span>
<span class="line"><span>/Parent 1 0 R</span></span>
<span class="line"><span>/Resources 3 0 R</span></span>
<span class="line"><span>/MediaBox [0 0 612 792]</span></span>
<span class="line"><span>/Contents [4 0 R]</span></span>
<span class="line"><span>/Type /Page</span></span>
<span class="line"><span>&gt;&gt;</span></span>
<span class="line"><span>endobj</span></span>
<span class="line"><span>3 0 obj</span></span>
<span class="line"><span>&lt;&lt;</span></span>
<span class="line"><span>/Font</span></span>
<span class="line"><span>&lt;&lt;</span></span>
<span class="line"><span>/F0</span></span>
<span class="line"><span>&lt;&lt;</span></span>
<span class="line"><span>/BaseFont /Times-Italic</span></span>
<span class="line"><span>/Subtype /Type1</span></span>
<span class="line"><span>/Type /Font</span></span>
<span class="line"><span>&gt;&gt;</span></span>
<span class="line"><span>&gt;&gt;</span></span>
<span class="line"><span>&gt;&gt;</span></span>
<span class="line"><span>endobj</span></span>
<span class="line"><span>4 0 obj</span></span>
<span class="line"><span>&lt;&lt;</span></span>
<span class="line"><span>/Length 65</span></span>
<span class="line"><span>&gt;&gt;</span></span>
<span class="line"><span>stream</span></span>
<span class="line"><span>1. 0. 0. 1. 50. 700. cm</span></span>
<span class="line"><span>BT</span></span>
<span class="line"><span> /F0 36. Tf</span></span>
<span class="line"><span> (Hello, World!) Tj</span></span>
<span class="line"><span>ET</span></span>
<span class="line"><span>endstream</span></span>
<span class="line"><span>endobj</span></span>
<span class="line"><span>5 0 obj</span></span>
<span class="line"><span>&lt;&lt;</span></span>
<span class="line"><span>/Pages 1 0 R</span></span>
<span class="line"><span>/Type /Catalog</span></span>
<span class="line"><span>&gt;&gt;</span></span>
<span class="line"><span>endobj</span></span>
<span class="line"><span>xref % 交叉引用表从这里开始</span></span>
<span class="line"><span>0 6</span></span>
<span class="line"><span>0000000000 65535 f</span></span>
<span class="line"><span>0000000015 00000 n</span></span>
<span class="line"><span>0000000074 00000 n</span></span>
<span class="line"><span>0000000192 00000 n</span></span>
<span class="line"><span>0000000291 00000 n</span></span>
<span class="line"><span>0000000409 00000 n</span></span>
<span class="line"><span>trailer % 预览块从这里开始</span></span>
<span class="line"><span>&lt;&lt;</span></span>
<span class="line"><span>/Root 5 0 R</span></span>
<span class="line"><span>/Size 6</span></span>
<span class="line"><span>&gt;&gt;</span></span>
<span class="line"><span>startxref</span></span>
<span class="line"><span>459</span></span>
<span class="line"><span>%%EOF % 结束标记从这里开始</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><p>PDF 文件中的对象集合形成图形</p><h3 id="pdf-文件头" tabindex="-1">PDF 文件头 <a class="header-anchor" href="#pdf-文件头" aria-label="Permalink to &quot;PDF 文件头&quot;">​</a></h3><p>PDF 文件的第一行给出文档的版本号：</p><p>PDF 是向后兼容的，很大程度上也是向前兼容的，所以无论版本号是多少，大多数 PDF 程序都会尝试读取其内容。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>%PDF-1.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>由于 PDF 文件几乎总是包含二进制数据，为了允许传统文件传输程序确定文件是二进制文件，通常在标头中包含一些字符代码高于 127 的字节。例如：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span> %%EOF</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>百分号表示另一个标题行，%之后将是至少四个 ASCII 值大于 127 的字符，尽管任何四个（或更多）值都可以，但最常用的是 âãÏÓ（0xE2E3CFD3）</p><h3 id="文件体-body" tabindex="-1">文件体 Body <a class="header-anchor" href="#文件体-body" aria-label="Permalink to &quot;文件体 Body&quot;">​</a></h3><p>文件体由一系列对象组成，每个对象在一行上都有一个对象编号（object number），世代号（generation number）和 obj 关键字，在这之后跟随一个 endobj 关键字：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>1 0 obj</span></span>
<span class="line"><span>&lt;&lt; /Type /Pages</span></span>
<span class="line"><span>    /Count 1</span></span>
<span class="line"><span>    /Kids [2 0 R]</span></span>
<span class="line"><span>&gt;&gt;</span></span>
<span class="line"><span>endobj</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="交叉引用表-cross-reference-table" tabindex="-1">交叉引用表（Cross-reference table） <a class="header-anchor" href="#交叉引用表-cross-reference-table" aria-label="Permalink to &quot;交叉引用表（Cross-reference table）&quot;">​</a></h3><blockquote><p>PDF 的核心特性之一</p><p>该表为文件中的每个间接对象提供了从文件开头计算的二进制偏移量，允许 PDF 处理器快速查找并随时读取任何对象。这种随机访问模型意味着可以快速打开和处理 PDF，而无需将整个文档加载到内存中。无论页面跳转的时候页码的“数字跳转”有多大，页面之间的导航都很快。在文件末尾使用交叉引用表还提供了两个额外的好处：可以一次性创建 PDF（无回溯），并有助于支持文档的增量更新。</p></blockquote><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>xref // 交叉引用表从这里开始</span></span>
<span class="line"><span>0 6 // 表中有6个条目，从0开始</span></span>
<span class="line"><span>0000000000 65535 f // 特别条目</span></span>
<span class="line"><span>0000000015 00000 n // 对象1的字节偏移量为15</span></span>
<span class="line"><span>0000000074 00000 n // 对象2的字节偏移量为74</span></span>
<span class="line"><span>0000000182 00000 n // ...</span></span>
<span class="line"><span>0000000281 00000 n</span></span>
<span class="line"><span>0000000410 00000 n // 对象5的字节偏移量为409</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="文件尾-trailer" tabindex="-1">文件尾 Trailer <a class="header-anchor" href="#文件尾-trailer" aria-label="Permalink to &quot;文件尾 Trailer&quot;">​</a></h3><p>文件尾的第一行是 trailer 关键字。之后是 trailer 字典，其中至少包含 /Size 条目（给出交叉引用表中条目的数量）和 /Root 条目（给出文档目录的对象编号，它是 Body 中对象图的根元素）。 接下来是 startxref 关键字，然后是一个表示交叉引用表字节偏移量的数字，最后是 %%EOF ，PDF 文件的结束标记，如下：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>trailer // trailer 关键字</span></span>
<span class="line"><span>// trailer 字典</span></span>
<span class="line"><span>&lt;&lt; /Size 6</span></span>
<span class="line"><span>  /Root 5 0 R</span></span>
<span class="line"><span>&gt;&gt;</span></span>
<span class="line"><span>startxref // startxref 关键字</span></span>
<span class="line"><span>459 // 交叉引用表字节偏移量</span></span>
<span class="line"><span>%%EOF // 文件结束标记</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="如何读取-pdf-文件" tabindex="-1">如何读取 PDF 文件 <a class="header-anchor" href="#如何读取-pdf-文件" aria-label="Permalink to &quot;如何读取 PDF 文件&quot;">​</a></h2><ol><li>从文件开头读取 PDF header，确认这确实是 PDF 文档并检索其版本号。</li><li>现在通过从末尾向后搜索找到文件结束标记 文件。现在可以读取 trailer 字典，以及开头的字节偏移量检索交叉引用表。</li><li>现在可以读取交叉引用表。我们现在知道每个对象在哪里了文件是。</li><li>在此阶段，可以读取和解析所有对象，或者我们可以离开此过程 直到实际需要每个对象，按需阅读。</li><li>我们现在可以使用数据，提取页面，解析图形内容，提取元数据等。</li></ol><h2 id="如何编写-pdf-文件" tabindex="-1">如何编写 PDF 文件 <a class="header-anchor" href="#如何编写-pdf-文件" aria-label="Permalink to &quot;如何编写 PDF 文件&quot;">​</a></h2><ol><li>输出 header。</li><li>删除 PDF 中任何其他对象未引用的任何对象。这个避免编写不再需要的对象。</li><li>重新编号对象，使它们从 1 到 n 运行，其中 n 是对象的数量文件。</li><li>逐个输出对象，从对象编号 1 开始，记录字节交叉引用表的每个偏移量。</li><li>编写交叉引用表。</li><li>编写 trailer，trailer 字典和文件结束标记</li></ol>`,26),r=[i];function c(b,t,o,u,m,d){return a(),n("div",null,r)}const v=s(l,[["render",c]]);export{g as __pageData,v as default};
