import{_ as s,c as i,o as a,a4 as t}from"./chunks/framework.DkZrsx35.js";const l="/web/assets/image-12.DTUZrbiq.png",u=JSON.parse('{"title":"控制台","description":"","frontmatter":{},"headers":[],"relativePath":"devtools/console.md","filePath":"devtools/console.md"}'),n={name:"devtools/console.md"},e=t(`<h1 id="控制台" tabindex="-1">控制台 <a class="header-anchor" href="#控制台" aria-label="Permalink to &quot;控制台&quot;">​</a></h1><h2 id="控制台中访问节点" tabindex="-1">控制台中访问节点 <a class="header-anchor" href="#控制台中访问节点" aria-label="Permalink to &quot;控制台中访问节点&quot;">​</a></h2><ul><li>$_ 返回最近一次表达式的结果</li><li>$0 表示当前选中的元素</li><li>$1, $2, $3...表示之前选中的元素。</li><li>$ 查询选择器</li><li>$$ 查询选择器的所有元素</li><li>$x xpath 定位元素</li></ul><h2 id="列出分配给元素的事件侦听器" tabindex="-1">列出分配给元素的事件侦听器 <a class="header-anchor" href="#列出分配给元素的事件侦听器" aria-label="Permalink to &quot;列出分配给元素的事件侦听器&quot;">​</a></h2><p>getEventListeners() 查看元素绑定的事件</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEventListeners</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($0);</span></span></code></pre></div><h2 id="监视元素上的事件" tabindex="-1">监视元素上的事件 <a class="header-anchor" href="#监视元素上的事件" aria-label="Permalink to &quot;监视元素上的事件&quot;">​</a></h2><p>monitorEvents</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">monitorEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;img&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">monitorEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;img&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mousedown&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mouseup&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;click&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">monitorEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(window, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;resize&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scroll&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unmonitorEvents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(window, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;resize&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scroll&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div><h2 id="检查函数" tabindex="-1">检查函数 <a class="header-anchor" href="#检查函数" aria-label="Permalink to &quot;检查函数&quot;">​</a></h2><p>console.dir(obj) 检查对象</p><h2 id="跟踪调用栈" tabindex="-1">跟踪调用栈 <a class="header-anchor" href="#跟踪调用栈" aria-label="Permalink to &quot;跟踪调用栈&quot;">​</a></h2><p>console.trace() 输出调用栈</p><h2 id="console-常用的方法" tabindex="-1">console 常用的方法 <a class="header-anchor" href="#console-常用的方法" aria-label="Permalink to &quot;console 常用的方法&quot;">​</a></h2><ul><li>log()</li><li>info()</li><li>warn()</li><li>error()</li><li>count()</li><li>table()</li><li>clear()</li><li>assert() 断言输出</li><li>time() timeEnd() 计时器开始和结束</li><li>profile() profileEnd() 性能分析开始和结束</li></ul><h2 id="实时表达式监视" tabindex="-1">实时表达式监视 <a class="header-anchor" href="#实时表达式监视" aria-label="Permalink to &quot;实时表达式监视&quot;">​</a></h2><p><img src="`+l+`" alt="alt text"></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mousemove&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e.x;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e.y;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,18),h=[e];function p(k,r,o,E,d,c){return a(),i("div",null,h)}const y=s(n,[["render",p]]);export{u as __pageData,y as default};
