import{_ as a,c as e,o as t,a4 as d}from"./chunks/framework.DkZrsx35.js";const P=JSON.parse('{"title":"PDF 前端开源软件","description":"","frontmatter":{},"headers":[],"relativePath":"opensource/pdf.md","filePath":"opensource/pdf.md"}'),o={name:"opensource/pdf.md"},p=d('<h1 id="pdf-前端开源软件" tabindex="-1">PDF 前端开源软件 <a class="header-anchor" href="#pdf-前端开源软件" aria-label="Permalink to &quot;PDF 前端开源软件&quot;">​</a></h1><h3 id="pdf-js" tabindex="-1">pdf.js <a class="header-anchor" href="#pdf-js" aria-label="Permalink to &quot;pdf.js&quot;">​</a></h3><p>一个通用的、基于 Web 标准的平台，用于解析和渲染 PDF(pdfjs-dist)，缺乏 PDF 创建和修改功能。</p><h3 id="pdfkit" tabindex="-1">PDFKit <a class="header-anchor" href="#pdfkit" aria-label="Permalink to &quot;PDFKit&quot;">​</a></h3><p>PDFKit 是一个强大的 JavaScript PDF 生成库，适用于 Node.js 和浏览器环境。它简化了复杂多页文档的创建过程，支持矢量图形、文本处理、图像嵌入、注释、表单等多种功能。</p><h3 id="pdfmake" tabindex="-1">pdfmake <a class="header-anchor" href="#pdfmake" aria-label="Permalink to &quot;pdfmake&quot;">​</a></h3><p>pdfmake 是一个围绕 PDFKit 构建的包装器库。主要的区别在于编程范例：</p><p>PDFKit 采用经典的命令式样式，而 pdfmake 具有声明式方法。</p><h3 id="pdf-lib" tabindex="-1">pdf-lib <a class="header-anchor" href="#pdf-lib" aria-label="Permalink to &quot;pdf-lib&quot;">​</a></h3><p>pdf-lib 是一个 JavaScript 库，用于在 Node.js 和浏览器中创建和修改 PDF 文档。它也是围绕 PDFKit 而构建的。</p>',10),i=[p];function r(s,f,n,c,l,h){return t(),e("div",null,i)}const m=a(o,[["render",r]]);export{P as __pageData,m as default};
