import{_ as e,c as o,o as a,a4 as c}from"./chunks/framework.DkZrsx35.js";const t="/web/assets/image-17.fXwDI0qp.png",m=JSON.parse('{"title":"HTTP 缓存","description":"","frontmatter":{},"headers":[],"relativePath":"devtools/cache.md","filePath":"devtools/cache.md"}'),i={name:"devtools/cache.md"},d=c('<h1 id="http-缓存" tabindex="-1">HTTP 缓存 <a class="header-anchor" href="#http-缓存" aria-label="Permalink to &quot;HTTP 缓存&quot;">​</a></h1><p><strong>缓存的作用</strong></p><ol><li>减少网络延迟：当客户端再次请求相同的资源时，如果该资源已经被缓存，就可以直接从本地获取，而不必通过网络从服务器获取，从而大大减少了网络延迟。</li><li>降低服务器负载：缓存可以分担服务器的一部分负载，特别是在高流量的情况下，减少服务器的响应压力。</li><li>节省带宽：通过缓存重复使用的资源，可以减少不必要的网络传输，节省带宽资源。</li></ol><h2 id="http-缓存方式" tabindex="-1">HTTP 缓存方式 <a class="header-anchor" href="#http-缓存方式" aria-label="Permalink to &quot;HTTP 缓存方式&quot;">​</a></h2><ol><li>Memory Cache</li><li>Service Worker Cache</li><li>HTTP Cache</li><li>Push Cach</li></ol><p><img src="'+t+'" alt="alt text"></p><h2 id="缓存的类型" tabindex="-1">缓存的类型 <a class="header-anchor" href="#缓存的类型" aria-label="Permalink to &quot;缓存的类型&quot;">​</a></h2><ol><li>强缓存： <ul><li>当资源被强缓存时，客户端在缓存有效期内直接从本地读取资源，不会向服务器发送请求。</li><li>强缓存通过设置响应头中的 <code>Cache-Control</code> 和 <code>Expires</code> 字段来实现。 <code>Cache-Control</code> 可以设置多种缓存指令，如 <code>max-age</code> 指定资源的缓存时间，单位为秒；<code>no-cache</code> 表示不使用强缓存，但可以使用协商缓存；<code>no-store</code> 表示不进行任何缓存。<code>Expires</code> 字段指定资源的过期时间，是一个绝对时间。</li></ul></li><li>协商缓存： <ul><li>当强缓存失效时，客户端会向服务器发送请求，询问资源是否有更新。如果服务器认为资源没有更新，就会返回 304 Not Modified 状态码，客户端继续使用本地缓存；如果资源有更新，服务器会返回新的资源内容。</li><li>协商缓存通过设置响应头中的 <code>Last-Modified</code> 和 <code>ETag</code> 字段来实现。 <code>Last-Modified</code> 表示资源的最后修改时间，客户端在下次请求时会在请求头中带上 <code>If-Modified-Since</code> 字段，值为上次服务器返回的 <code>Last-Modified</code> 的值。服务器比较这个值和资源的实际最后修改时间，如果一致则返回 304 状态码。<code>ETag</code> 是资源的唯一标识，客户端在下次请求时会在请求头中带上 <code>If-None-Match</code> 字段，值为上次服务器返回的 <code>ETag</code> 的值。服务器比较这个值和资源的当前 <code>ETag</code>，如果一致则返回 304 状态码。</li></ul></li></ol>',8),l=[d];function r(s,h,n,_,p,T){return a(),o("div",null,l)}const u=e(i,[["render",r]]);export{m as __pageData,u as default};
